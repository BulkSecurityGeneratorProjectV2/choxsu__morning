<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syc.service.dao.BlogDao">

    <resultMap type="com.syc.model.entity.mybatis.entity.Blog" id="BlogMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="accountid" column="accountId" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="OTHER"/>
        <result property="createat" column="createAt" jdbcType="TIMESTAMP"/>
        <result property="updateat" column="updateAt" jdbcType="TIMESTAMP"/>
        <result property="clickcount" column="clickCount" jdbcType="INTEGER"/>
        <result property="likecount" column="likeCount" jdbcType="INTEGER"/>
        <result property="favoritecount" column="favoriteCount" jdbcType="INTEGER"/>
        <result property="category" column="category" jdbcType="VARCHAR"/>
        <result property="isdelete" column="isDelete" jdbcType="INTEGER"/>
        <result property="tagId" column="tag_id" jdbcType="INTEGER"/>
        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
        <result property="markedcontent" column="markedContent" jdbcType="OTHER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BlogMap">
        select
          id, accountId, title, content, createAt, updateAt, clickCount, likeCount, favoriteCount, category, isDelete, tag_id, category_id, markedContent
        from blog.blog
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BlogMap">
        select
        id, accountId, title, content, createAt, updateAt, clickCount, likeCount, favoriteCount, category, isDelete, tag_id, category_id, markedContent
        from blog.blog
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BlogMap">
        select
          id, accountId, title, content, createAt, updateAt, clickCount, likeCount, favoriteCount, category, isDelete, tag_id, category_id, markedContent
        from blog.blog
        <where>
            <if test="blog.id != null">
                and id = #{blog.id}
            </if>
            <if test="blog.accountid != null">
                and accountId = #{blog.accountid}
            </if>
            <if test="blog.title != null and blog.title != ''">
                and title = #{blog.title}
            </if>
            <if test="blog.content != null">
                and content = #{blog.content}
            </if>
            <if test="blog.createat != null">
                and createAt = #{blog.createat}
            </if>
            <if test="blog.updateat != null">
                and updateAt = #{blog.updateat}
            </if>
            <if test="blog.clickcount != null">
                and clickCount = #{blog.clickcount}
            </if>
            <if test="blog.likecount != null">
                and likeCount = #{blog.likecount}
            </if>
            <if test="blog.favoritecount != null">
                and favoriteCount = #{blog.favoritecount}
            </if>
            <if test="blog.category != null and blog.category != ''">
                and category = #{blog.category}
            </if>
            <if test="blog.isdelete != null">
                and isDelete = #{blog.isdelete}
            </if>
            <if test="blog.tagId != null">
                and tag_id = #{blog.tagId}
            </if>
            <if test="blog.categoryId != null">
                and category_id = #{blog.categoryId}
            </if>
            <if test="blog.markedcontent != null">
                and markedContent = #{blog.markedcontent}
            </if>
            <if test="tagIds != null and tagIds.size > 0">
                and tag_id in
                <foreach collection="tagIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into blog.blog(accountId, title, content, createAt, updateAt, clickCount, likeCount, favoriteCount, category, isDelete, tag_id, category_id, markedContent)
        values (#{accountid}, #{title}, #{content}, #{createat}, #{updateat}, #{clickcount}, #{likecount}, #{favoritecount}, #{category}, #{isdelete}, #{tagId}, #{categoryId}, #{markedcontent})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update blog.blog
        <set>
            <if test="accountid != null">
                accountId = #{accountid},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="createat != null">
                createAt = #{createat},
            </if>
            <if test="updateat != null">
                updateAt = #{updateat},
            </if>
            <if test="clickcount != null">
                clickCount = #{clickcount},
            </if>
            <if test="likecount != null">
                likeCount = #{likecount},
            </if>
            <if test="favoritecount != null">
                favoriteCount = #{favoritecount},
            </if>
            <if test="category != null and category != ''">
                category = #{category},
            </if>
            <if test="isdelete != null">
                isDelete = #{isdelete},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
            <if test="markedcontent != null">
                markedContent = #{markedcontent},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from blog.blog where id = #{id}
    </delete>

</mapper>