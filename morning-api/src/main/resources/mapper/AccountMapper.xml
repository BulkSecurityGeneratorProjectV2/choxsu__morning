<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syc.service.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.syc.model.entity.Account">
    <!--@mbg.generated-->
    <id column="account_id" jdbcType="INTEGER" property="id" />
    <result column="account_nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="account_userName" jdbcType="VARCHAR" property="username" />
    <result column="account_password" jdbcType="VARCHAR" property="password" />
    <result column="account_salt" jdbcType="VARCHAR" property="salt" />
    <result column="account_status" jdbcType="INTEGER" property="status" />
    <result column="account_createAt" jdbcType="TIMESTAMP" property="createat" />
    <result column="account_ip" jdbcType="VARCHAR" property="ip" />
    <result column="account_avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="account_likeCount" jdbcType="INTEGER" property="likecount" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    account.id as account_id, account.nickName as account_nickName, account.userName as account_userName, 
    account.`password` as `account_password`, account.salt as account_salt, account.`status` as `account_status`, 
    account.createAt as account_createAt, account.ip as account_ip, account.avatar as account_avatar, 
    account.likeCount as account_likeCount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from account account
    where account.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.syc.model.entity.Account" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into account (nickName, userName, `password`, 
      salt, `status`, createAt, 
      ip, avatar, likeCount
      )
    values (#{nickname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createat,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{likecount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.syc.model.entity.Account" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        nickName,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createat != null">
        createAt,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="likecount != null">
        likeCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createat != null">
        #{createat,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="likecount != null">
        #{likecount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.syc.model.entity.Account">
    <!--@mbg.generated-->
    update account
    <set>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createat != null">
        createAt = #{createat,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="likecount != null">
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.syc.model.entity.Account">
    <!--@mbg.generated-->
    update account
    set nickName = #{nickname,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      createAt = #{createat,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      likeCount = #{likecount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>